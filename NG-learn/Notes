


  NG- lifecycle
  --------------
  
  
   a. compilation-phase
   
      for every directive/expression, angular will register 'watchers' 
      to do data-binding.
      
      who will execute watcher(s)?
      
      "digest-loop"
      
      
      when model change ? , digest-loop will execute 'watchers'
      
      -----------------------------------------------
      
      we can also register custom-watcher(s) in angular-app.
      
      -------------------------------------------------
      
      
    ------------------------------------------------------------------
    
    directive :
    
    annotation/marker on HTML element ,
    will execute  some JS-functionality for DOM manipulation.
    
    
    adv:
    
    --> we can bring 'declarative' programming
    
    
    ----------------------------------------------------------------
    
    how to create 'custom directives' ?
    
    mod.directive('name',function(){
    return{
    
    }
    });
    
    
    -----------------------------------------------------------------
    
    custom-directives with scope
    
    1. directives in existing-scope
    
       e.g , ng-show,ng-hide , etc.....
    
    2. directives always creates 'child-scope'
    
       e.g ng-controller , ng-repeat , etc....
       
    3. directives creates 'isolated-scope'   
    
       e.g  ng-transclude
       
    ------------------------------------------------------------------    
    
    reference:
    
    https://www.toptal.com/angular-js/angular-js-demystifying-directives
    
    ------------------------------------------------------------------    
    
    
    
    Angular-components
    
    
    --> controller   : View-behavior
    --> filters      : filtering on model properties
    --> directives   : DOM Manipulations in declarative-way
    
    --> services     : angular's business-logic code
    
                        e.g
                        
                        --> communicating with server-side
                        --> logging
                        --> routing
                        --> security
                        --> caching..
                        
                        etc........
    
    
    -------------------------------------------------------------------
    
    
    how to create 'service' components ?
    
    rule:
    -----
    
    
    Provider's  --> factory-method()  ----> service-comp
    
    
    -------------------------------------------------------------------
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      
      
      